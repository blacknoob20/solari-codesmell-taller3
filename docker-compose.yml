#version: '3'
services:
  sonarqube:
    depends_on:
      - db
    container_name: sonarqube
    image: sonarqube:9-community
    restart: always
    environment:
      - SONARQUBE_JDBC_URL=jdbc:postgresql://db:5432/sonarqube
      - SONARQUBE_JDBC_USERNAME=sonarAdmin
      - SONARQUBE_JDBC_PASSWORD=password_123@
    ports:
      - "9000:9000"
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    healthcheck:
      test: [ "CMD", "wget", "--spider", "-q", "http://localhost:9000" ]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - net

  db:
    container_name: db
    image: postgres:13
    environment:
      - POSTGRES_DB=sonarqube
      - POSTGRES_USER=sonarAdmin
      - POSTGRES_PASSWORD=password_123@
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - net

  sonar-scanner:
    depends_on:
      sonarqube:
        condition: service_healthy
    container_name: scan
    image: sonarsource/sonar-scanner-cli:latest
    restart: always
    environment:
      - SONAR_HOST_URL=http://sonarqube:9000
    tty: true
    volumes:
      - ./app:/usr/src
    working_dir: /usr/src
    command: "sonar-scanner -Dsonar.projectKey=prueba -Dsonar.sources=. -Dsonar.login=sqp_729832ed3c07ce170d34542b2d8609b2cad60078"
    networks:
      - net

networks:
  net:


volumes:
  postgres-data:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
